<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Bo&#39;s Log</title>
    <link>https://csc-bo.github.io/</link>
    <description>Recent content on Bo&#39;s Log</description>
    <image>
      <title>Bo&#39;s Log</title>
      <url>https://csc-bo.github.io/favicon.ico</url>
      <link>https://csc-bo.github.io/favicon.ico</link>
    </image>
    <generator>Hugo -- 0.125.4</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2024 11:55:55 +0800</lastBuildDate>
    <atom:link href="https://csc-bo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Structure</title>
      <link>https://csc-bo.github.io/posts/data_structure/</link>
      <pubDate>Fri, 03 May 2024 11:55:55 +0800</pubDate>
      <guid>https://csc-bo.github.io/posts/data_structure/</guid>
      <description>String
Definition: A sequence of characters representing text. Example: let myString = &amp;#34;Hello, JavaScript!&amp;#34;; Array
Definition: A collection of elements, each accessed by an index. Example: let myArray = [1, 2, 3, 4, 5]; Linked List
Definition: A linear data structure where each element is a node that contains a value and a pointer to the next node. Example: class LinkedListNode { constructor(data) { this.data = data; this.next = null; } } let head = null; // Start with an empty list Stack</description>
    </item>
    <item>
      <title>Algorithm Ninja</title>
      <link>https://csc-bo.github.io/projects/algorithm_ninja/</link>
      <pubDate>Fri, 03 May 2024 11:34:01 +0800</pubDate>
      <guid>https://csc-bo.github.io/projects/algorithm_ninja/</guid>
      <description>TODO List Data Structures Array Linked List Stack Queue Tree (Binary, AVL, Red-Black) Heap Graph Trie (Prefix) Hash Table Searching Algorithms Linear Search Binary Search Interpolation Search Exponential Search Jump Search Sorting Algorithms Bubble Sort Selection Sort Insertion Sort Quick Sort Merge Sort Heap Sort Radix Sort Counting Sort Bucket Sort TimSort Recursion Factorial Fibonacci Tower of Hanoi Binary Search Tree Traversal Permutations and Combinations Greedy Algorithms Activity Selection Huffman Coding Kruskal&amp;rsquo;s MST Prim&amp;rsquo;s MST Dijkstra&amp;rsquo;s Shortest Path Fractional Knapsack Dynamic Programming Knapsack Problem Longest Increasing Subsequence Matrix Chain Multiplication Edit Distance Fibonacci Sequence Longest Common Subsequence Topological Sort Graph Algorithms Breadth-First Search (BFS) Depth-First Search (DFS) Shortest Path Algorithms (Dijkstra, Bellman-Ford, A*) Ford-Fulkerson for Flow Networks Topological Sort String Algorithms KMP Algorithm Rabin-Karp Algorithm Z-Algorithm Boyer-Moore Algorithm Suffix Trees/Tries Bit Manipulation Bitwise AND, OR, XOR, NOT Left/Right Shifts Bitmasking Bit Hacking Techniques Time Complexity Analysis Big O Notation Asymptotic Analysis Worst, Best, Average Cases Space Complexity Analysis Understanding Memory Footprint Amortized Analysis Space Complexity of Recursion Practice Resources LeetCode HackerRank CodeWars Project Euler GeeksforGeeks To mark an item as completed, replace [ ] with [x] or [âˆš] before the item.</description>
    </item>
    <item>
      <title>Deep Learning FAQ</title>
      <link>https://csc-bo.github.io/faq/</link>
      <pubDate>Thu, 02 May 2024 12:10:45 +0800</pubDate>
      <guid>https://csc-bo.github.io/faq/</guid>
      <description>What is Deep Learning? Deep learning is a subfield of artificial intelligence (AI) that focuses on training artificial neural networks to learn and make intelligent decisions. These networks are inspired by the structure and function of the human brain, and they can learn from vast amounts of data to perform tasks such as image recognition, natural language processing, and machine translation.
How does Deep Learning work? Deep learning models are typically composed of multiple layers of interconnected nodes, known as neurons.</description>
    </item>
    <item>
      <title>Notes for MIT 6.S191</title>
      <link>https://csc-bo.github.io/posts/mit6s191/</link>
      <pubDate>Wed, 01 May 2024 21:52:19 +0800</pubDate>
      <guid>https://csc-bo.github.io/posts/mit6s191/</guid>
      <description>1. Introduction to Deep Learning After watch one of Feifei Li and Geffery Hinton&amp;rsquo;s video on Youtube, I start to gain interest in DeepLearning, then I found this MIT course online that is a very comprehensive introduction for the Deep Learning which perfect for beginners like myself. This blog post marks the beginning of my journey into the world of machine learning, serving as a collection for my course notes and insights from related materials.</description>
    </item>
  </channel>
</rss>
